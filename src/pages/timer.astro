---
import { useState, useEffect } from "react";
import Layout from "@layouts/Layout.astro";
---

<Layout>
  <main id="main-content">
    <section id="timer">
      <div id="controls">
        <div id="time-controls">
          <select id="time-select">
            <option value="300">5 minutes</option>
            <option value="600">10 minutes</option>
            <option value="900">15 minutes</option>
            <option value="1200">20 minutes</option>
          </select>
        </div>
        <div id="type-controls">
          <select id="type-select">
            <option value="break">‚òïÔ∏è Break</option>
            <option value="lab">üßë‚Äçüî¨ Lab</option>
          </select>
        </div>
        <button id="start-button">Start</button>
        <button id="stop-button">Stop</button>
      </div>
      <div id="countdown"></div>
    </section>
  </main>
</Layout>

<script>
  const countdownElement = document.getElementById('countdown');
  const timeSelect = document.getElementById('time-select');
  const startButton = document.getElementById('start-button');
  const stopButton = document.getElementById('stop-button');
  let timerInterval;

  function updateTimer(timeLeft) {
    const minutes = Math.floor(timeLeft / 60);
    const seconds = timeLeft % 60;
    countdownElement.textContent = `${minutes}:${seconds.toString().padStart(2, '0')}`;
  }

  function startTimer() {
    clearInterval(timerInterval);
    let timeLeft = parseInt(timeSelect.value, 10);
    updateTimer(timeLeft);

    timerInterval = setInterval(() => {
      if (timeLeft > 0) {
        timeLeft -= 1;
        updateTimer(timeLeft);
      } else {
        clearInterval(timerInterval);
      }
    }, 1000);
  }

  function stopTimer() {
    clearInterval(timerInterval);
    countdownElement.textContent = "Timer stopped";
  }

  startButton.addEventListener('click', startTimer);
  stopButton.addEventListener('click', stopTimer);
</script>

<style>
  #timer {
    @apply pb-6 pt-12 text-center;
  }
  #timer h1 {
    @apply text-3xl font-bold;
  }
  #controls {
    @apply mt-4 flex items-center justify-center gap-4;
  }
  #time-controls, #type-controls {
    @apply flex flex-col items-start;
  }
  #time-controls label, #type-controls label {
    @apply mb-1;
  }
  #time-controls select, #type-controls select {
    @apply border rounded px-2 py-1;
  }
  #controls button {
    @apply border rounded px-4 py-2;
    @apply flex items-center justify-center;
  }
  #time-controls select, #type-controls select, #controls button {
    height: 32px;
  }
  #countdown {
    @apply text-4xl font-mono mt-4;
  }
  #stop-button {
    @apply border rounded px-4 py-2;
  }
</style>